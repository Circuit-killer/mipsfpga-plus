<p><big><b>5. Compiling the software and uploading it into the synthesized system using Serial Loader</b></big></p>

<p>A set of Linux Bourne shell scripts with self-descriptive names to guide a user through the lab step-by-step.
See the description of Windows batch files above. Linux shell scripts and Windows batch files
generally match each other except for <i>12_upload_to_the_board_using_uart.sh</i> that uses different
Linux-specific commands comparing to Windows-specific <i>12_upload_to_the_board_using_uart.bat</i>.</p>

<p>Only <i>02_compile_and_link.sh</i>, <i>08_generate_motorola_s_record_file.sh</i>
and <i>12_upload_to_the_board_using_uart.sh</i> are required for running the lab;
running the rest of batch files is optional.</p>

</td></tr><tr><td>
<i>boot.S</i>
</td><td>

Boot sequence, a program in assemply that starts after the processor reset,
initializes system coprocessor registers, caches and TLB MMU, then jumps into the user's program.

</td></tr><tr><td>
<i>main.c</i>
</td><td>

User's program written in C.

</td></tr><tr><td>
<i>makefile</i>
</td><td>

Makefile that contans basic tasks for compiling and linking the program.
Can be used instead of supplied Windows batch files and Linux scripts.

</td></tr><tr><td>
<i>mfp_memory_mapped_registers.h</i>
</td><td>

Header file that contains definitions for the memory-mapped I/O registers
used to communicate the software with I/O devices on the board - buttons, LEDs,
as well as external devices connected through general-purpose I/O ports. 

</td></tr><tr><td>
<i>modelsim_script.tcl</i>
</td><td>

A script in Tcl language used by Mentor ModelSim RTL simulator
to automate Verilog compilation, running the simulation and controlling displaying waveforms.

</td></tr><tr><td>
<i>program.ld</i>
</td><td>

A linker script used by GCC toolchain.
Defines virtual memory locations for boot sequence, user program and data.

</td></tr>
</table></p>

<p><big><b>5.2. The first lab program</b></big></p>

<p>The first program just increments the counter and outputs its highest bits
to board-dependent read and green LEDs, as well as the abstracted seven-segment
multiple-digit display peripheral, implemented as a module in top-level board wrapper.</p>

<blockquote><p>File <i>01_compile_c_to_assembly.bat</i></p><pre>                      
#include "mfp_memory_mapped_registers.h"

int main ()
{
    long long int n = 0;

    for (;;)
    {
        MFP_RED_LEDS   = n >> 16;
        MFP_GREEN_LEDS = n >> 16;
        MFP_7_SEGMENT_HEX = ((n >> 8) & 0xffffff00) | (n & 0xff);

        n ++;
    }

    return 0;
}
</pre></blockquote>

<p>Memory-mapped I/O registers are pseudo-variables created using <i>#define</i>
constructs in <i>mfp_memory_mapped_registers.h</i> header file.
The "* (volatile unsigned *)" construct is needed so that the compiler
do not optimize memory accesses to the addresses of memory-mapped I/O registers:</p>

<blockquote><p>File <i>mfp_memory_mapped_registers.h</i></p><pre>                      
#ifndef MFP_MEMORY_MAPPED_REGISTERS_H
#define MFP_MEMORY_MAPPED_REGISTERS_H

#define MFP_RED_LEDS_ADDR       0xBF800000
#define MFP_GREEN_LEDS_ADDR     0xBF800004
#define MFP_SWITCHES_ADDR       0xBF800008
#define MFP_BUTTONS_ADDR        0xBF80000C
#define MFP_7_SEGMENT_HEX_ADDR  0xBF800010

#define MFP_RED_LEDS            (* (volatile unsigned *) MFP_RED_LEDS_ADDR      )
#define MFP_GREEN_LEDS          (* (volatile unsigned *) MFP_GREEN_LEDS_ADDR    )
#define MFP_SWITCHES            (* (volatile unsigned *) MFP_SWITCHES_ADDR      )
#define MFP_BUTTONS             (* (volatile unsigned *) MFP_BUTTONS_ADDR       )
#define MFP_7_SEGMENT_HEX       (* (volatile unsigned *) MFP_7_SEGMENT_HEX_ADDR )

// This define is used in boot.S code

#define BOARD_16_LEDS_ADDR      MFP_RED_LEDS_ADDR

#endif
</pre></blockquote>

<p><big><b>5.3. First step: cleaning all</b></big></p>

<p>This step is optional. It removes all files generated by other steps.</p>

<blockquote><p>File <i>00_clean_all.bat</i></p><pre>                                  
rd /s /q sim

del *.o
del main.s
del program.elf
del program.map
del program.dis
del program*.hex
del program.rec
del FPGA_Ram.elf

</pre></blockquote>

<p><big><b>5.4. Compiling the software</b></big></p>

<p><big><b>5.4.1. Compiling C program into assembly to examine the generated code</b></big></p>

<p>This step is optional. It can be used to see MIPS assembly code generated by the compiler
for the given C code. When compiling C programs for MIPS platform using GCC toolchain
it is essential to use optimization option, at least <i>-O1</i>. Without optimizations
(<i>-O1</i>) the compiler located all C variable on memory locations rather then
on registers, de facto erasing all the performance advantage of high-performance
RISC core with large register set.</p>

<blockquote><p>File <i>01_compile_c_to_assembly.bat</i></p><pre>                      
rem -EL           - Little-endian
rem -march=m14kc  - MIPSfpga = MIPS microAptiv UP based on MIPS M14Kc
rem -msoft-float  - should not use floating-point processor instructions
rem -O2           - optimization level
rem -S            - compile to assembly

mips-mti-elf-gcc -EL -march=m14kc -msoft-float -O2 -S main.c

</pre></blockquote>

<p>You can compare the code generated with and without optimization below:</p>

<blockquote><p>The generated <i>main.s</i> MIPS assembly file when compiling with optimization (<i>-O2</i> option)</p>
<pre>                      
main:
	.frame	$sp,0,$31		# vars= 0, regs= 0/0, args= 0, gp= 0
	.mask	0x00000000,0
	.fmask	0x00000000,0
	.set	noreorder
	.set	nomacro
	move	$3,$0
	move	$5,$0
	li	$6,-1082130432			# 0xffffffffbf800000
	li	$11,-256			# 0xffffffffffffff00
	sll	$4,$5,24
.L4:
	srl	$2,$3,8
	or	$2,$4,$2
	sll	$8,$5,16
	srl	$4,$3,16
	andi	$10,$3,0xff
	addiu	$7,$3,1
	and	$2,$2,$11
	or	$4,$8,$4
	sltu	$9,$7,$3
	or	$2,$2,$10
	sw	$4,0($6)
	move	$3,$7
	sw	$4,4($6)
	addu	$5,$9,$5
	sw	$2,16($6)
	b	.L4
	sll	$4,$5,24
</pre></blockquote>

<blockquote><p>The generated <i>main.s</i> MIPS assembly file when compiling without optimization (<i>-O0</i> option)</p>
<pre>                      
main:
	.frame	$fp,16,$31		# vars= 8, regs= 1/0, args= 0, gp= 0
	.mask	0x40000000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.set	nomacro
	addiu	$sp,$sp,-16
	sw	$fp,12($sp)
	move	$fp,$sp
	move	$2,$0
	move	$3,$0
	sw	$2,0($fp)
	sw	$3,4($fp)
.L2:
	li	$2,-1082130432			# 0xffffffffbf800000
	lw	$3,4($fp)
	sll	$3,$3,16
	lw	$10,0($fp)
	srl	$8,$10,16
	or	$8,$3,$8
	lw	$3,4($fp)
	sra	$9,$3,16
	move	$3,$8
	sw	$3,0($2)
	li	$2,-1082130432			# 0xffffffffbf800000
	ori	$2,$2,0x4
	lw	$3,4($fp)
	sll	$3,$3,16
	lw	$10,0($fp)
	srl	$6,$10,16
	or	$6,$3,$6
	lw	$3,4($fp)
	sra	$7,$3,16
	move	$3,$6
	sw	$3,0($2)
	li	$2,-1082130432			# 0xffffffffbf800000
	ori	$2,$2,0x10
	lw	$3,4($fp)
	sll	$3,$3,24
	lw	$10,0($fp)
	srl	$4,$10,8
	or	$4,$3,$4
	lw	$3,4($fp)
	sra	$5,$3,8
	move	$10,$4
	li	$3,-256			# 0xffffffffffffff00
	and	$10,$10,$3
	lw	$3,0($fp)
	andi	$3,$3,0xff
	or	$3,$10,$3
	sw	$3,0($2)
	lw	$10,0($fp)
	lw	$11,4($fp)
	li	$12,1			# 0x1
	move	$13,$0
	addu	$2,$10,$12
	sltu	$14,$2,$10
	addu	$3,$11,$13
	addu	$10,$14,$3
	move	$3,$10
	sw	$2,0($fp)
	sw	$3,4($fp)
	b	.L2
	nop
</pre></blockquote>

<p><big><b>5.4.2. Compiling C and assembly programs and linking them into ELF file</b></big></p>

<p>This step is required. It generates file in ELF format used to define executables for bare metal software
(ELF - Executable and Linkable Format)</p>

<blockquote><p>File <i>02_compile_and_link.bat</i></p><pre>                           
rem -EL             - Little-endian
rem -march=m14kc    - MIPSfpga = MIPS microAptiv UP based on MIPS M14Kc
rem -msoft-float    - should not use floating-point processor instructions
rem -o program.elf  - output file name
rem -O2             - optimization level
rem -T, -Wl         - linked options

mips-mti-elf-gcc -EL -march=m14kc -msoft-float -O2
    -Wl,-Map=program.map -T program.ld
    -Wl,--defsym,__flash_start=0xbfc00000
    -Wl,--defsym,__flash_app_start=0x80000000
    -Wl,--defsym,__app_start=0x80000000
    -Wl,--defsym,__stack=0x80040000
    -Wl,--defsym,__memory_size=0x1f800
    -Wl,-e,0xbfc00000
    boot.S main.c -o program.elf

</pre></blockquote>

<p><big><b>5.4.3. Checking program size</b></big></p>

<p>This step is optional. This utility outputs the information
that can be used to check if the program fits memory size.</p>

<blockquote><p>File <i>03_check_program_size.bat</i></p><pre>                         
mips-mti-elf-size program.elf
</pre></blockquote>

<blockquote><p>The output of <i>03_check_program_size.bat</i></p>
<pre>                         
   text	   data	    bss	    dec	    hex	filename
   1292	     32	     32	   1356	    54c	program.elf
</pre></blockquote>

<p><big><b>5.4.4. Using disassembly program</b></big></p>

<p>This step is optional. It can be used to see the contents of the linked ELF executable.</p>

<blockquote><p>File <i>04_disassemble.bat</i></p><pre>                                
mips-mti-elf-objdump -D program.elf &gt; program.dis

</pre></blockquote>
<p><big><b>5.5. Using Verilog simulation to model and debug both hardware and software </b></big></p>

<p>This step is optional or can be used as a separate lab.</p>

<p><big><b>5.5.1. Preparing Verilog $readmemh file with memory image for the software</b></big></p>

<p>This step is optional and is needed only for simulation using Mentor ModelSim,
Icarus Verilog, Xilinx Vivado simulator or any other Verilog simulator.</p>

<blockquote><p>File <i>05_generate_verilog_readmemh_file.bat</i></p><pre>             
mips-mti-elf-objcopy program.elf -O verilog program.hex
..\utilities\ad_hoc_program_hex_splitter

</pre></blockquote>

<p>MIPSfpga 1.0 package prepared the HEX file to load into ModelSim for simulation using <i>objdump</i> utility
from the standard GCC toolchain, in combination with Windows-only script that was slow. The HEX file in MIPSfpga 2.0
is generated in a different, faster and somewhat more standard way, using <i>objcopy</i> utility from GCC toolchain
with an option "-O verilog", in combination with MIPSfpga 2.0 -specific utility called
<a href="https://github.com/MIPSfpga/mipsfpga-plus/blob/master/programs/utilities/ad_hoc_program_hex_splitter.c">ad_hoc_program_hex_splitter</a>.</p>

<p>The utility <a href="https://github.com/MIPSfpga/mipsfpga-plus/blob/master/programs/utilities/ad_hoc_program_hex_splitter.c">ad_hoc_program_hex_splitter</a>
splits the file <i>program.hex</i> into two files, <i>program_00000000.hex</i> and <i>program_1fc00000.hex</i>,
that correspond to two physical memory locations - starting from addresses 0x00000000 and 0x1fc00000 correspondingly.
When doing splitting, <i>ad_hoc_program_hex_splitter</i> also converts virtual addresses into byte offsets in the corresponding memories.</p>

<p>In order to load the file created with <i>objcopy</i> and <i>ad_hoc_program_hex_splitter</i>
into 4-byte-wide ram register array, the following testbench code is used in <i>MFP_USE_WORD_MEMORY</i> and non-<i>MFP_USE_WORD_MEMORY</i> modes:</p>

<p><a href="http://www.silicon-russia.com/wp-content/uploads/2016/02/Screenshot-2016-02-02-23.30.05.png"><img src="http://www.silicon-russia.com/wp-content/uploads/2016/02/Screenshot-2016-02-02-23.30.05.png" /></a></p>

<p><a href="http://www.silicon-russia.com/wp-content/uploads/2016/02/Screenshot-2016-02-02-23.30.23.png"><img src="http://www.silicon-russia.com/wp-content/uploads/2016/02/Screenshot-2016-02-02-23.30.23.png"  /></a></p>

<p>The last step is necessary to load word-wide hex file data into narrow
byte-wide memories necessary for the proper support od byte-wide uncached writes
caused by MIPS instructions <i>SB</i> targeting uncached virtual addresses.</p>
<p><big><b>5.5.2. Simulating the system using Mentor Graphics ModelSim</b></big></p>

<p>This step is optional. Verilog simulation is the mainstream way of debugging Verilog RTL code.
Mentor ModelSim is a popular low-cost simulator with free version.
This lab is not intended to teach how to use ModelSim, which has a complex GUI
and scripting language to control it by power user. This lab uses a simple Tcl script
that runs the simulation and shows the results on waveforms.
Tcl, or Tool Control Language is a scripting language utilized by many
Electronic Design Automation (EDA) tools.</p>

<p>Windows batch file that invokes ModelSim with Tcl script:</p>

<blockquote><p>File <i>06_simulate_with_modelsim.bat</i></p><pre>                     
rd /s /q sim
md sim
cd sim

copy ..\*.hex .

vsim -do ../modelsim_script.tcl

</pre></blockquote>

<p>The Tcl script used to compile Verilog source code, setup the waveforms and run the sumulation:</p>

<blockquote><p>File <i>modelsim_script.tcl</i></p><pre>                     
vlib work
vlog -vlog01compat +define+SIMULATION +incdir+../../../../../MIPSfpga/rtl_up +incdir+../../.. ../../../../../MIPSfpga/rtl_up/*.v ../../../*.v
vsim work.mfp_testbench
add wave sim:/mfp_testbench/*
run -all
</pre></blockquote>

<p>The screenshots outline the steps necessary to observe the results:</p>

<p><center><b><font color=blue>Figure 5.1. After the test stops running, the simulator asks whether a user wants to exit. Clock "No":</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.29.33.png"><img src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.29.33.png" /></a>

<p><center><b><font color=blue>Figure 5.2. ModelSim has complicated "busy" GUI. Click on small icon indicating the windows with the waveforms:</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.29.38.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.29.38.png" /></a>

<p><center><b><font color=blue>Figure 5.3. We can see the windows with the waveforms</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.29.42.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.29.42.png" /></a>

<p><center><b><font color=blue>Figure 5.4. A little icon, second from top right corner, allows to "undock" the waveform window:</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.01.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.01.png" /></a>

<p><center><b><font color=blue>Figure 5.5. Press the rightmost of "zoom" icons to see the whole waveforms:</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.15.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.15.png" /></a>

<p><center><b><font color=blue>Figure 5.6. Set the cursor on right side of the waveform, after core executed the boot sequence:</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.19.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.19.png" /></a>

<p><center><b><font color=blue>Figure 5.7. Use '+' zoom icon to zoom in:</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.36.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.30.36.png" /></a>

<p><center><b><font color=blue>Figure 5.8. Select the signal you want to change radix from binary to hexadecimal:</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.31.51.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.31.51.png" /></a>

<p><center><b><font color=blue>Figure 5.9. Change radix and observe how the value on GPIO outputs is incrementing:</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.33.05.png"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.33.05.png" /></a>
<p><big><b>5.5.3. Simulating the system using Icarus Verilog</b></big></p>

<p>This step is optional.
Verilog simulation is the mainstream way of debugging Verilog RTL code.
Icarus Verilog is the easiest to use Verilog simulator available for the students.
It is free but quite slow, for large designs it is order of magnitude slower
on long runs that expensive commercial simulators like Synopsys VCS and even
commercial version of ModelSim.</p>

<p>Icarus Verilog is frequently used together with another free tool, GTKWave waveform viever.
The script below compiles Verilog files for MIPSfpga using Icarus Verilog,
runs the simulation and invokes GTKWave viewer with its simple intuitive GUI interface.</p>

<blockquote><p>File <i>07_simulate_with_icarus.bat</i></p><pre>                       
rd /s /q sim
md sim
cd sim

copy ..\*.hex .

\iverilog\bin\iverilog -D SIMULATION -g2005
    -I ../../..
    -I ../../../../../MIPSfpga/rtl_up
    ../../../../../MIPSfpga/rtl_up/mvp*.v
    ../../../../../MIPSfpga/rtl_up/RAM*.v
    ../../../../../MIPSfpga/rtl_up/*xilinx.v
    ../../../../../MIPSfpga/rtl_up/m14k*.v
    ../../../*.v

\iverilog\bin\vvp a.out &gt; a.lst
\iverilog\gtkwave\bin\gtkwave.exe dump.vcd

</pre></blockquote>

<p><center><b><font color=blue>Figure 5.10. GTKWave viewer shows thye waveforms generated
during simulation of MIPSfpga using Icarus Verilog simulator</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.12.40.png">
<img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/Screenshot-2016-09-29-00.12.40.png" /></a>
<p><big><b>5.6. Uploading software program to the board</b></big></p>

<p><big><b>5.6.1. Generating the file in Motorola S-Record format</b></big></p>

<p>This step is required. Motorola S-Record is a format used by Serial Loader
to load the software into the sythesized MIPSfpga system on FPGA board.
The script uses a standard utility in GCC toolchain called <i>mips-mti-elf-objcopy</i>.
For more information please see <i>Section 2. The theory of operation</i></p>

<blockquote><p>File <i>08_generate_motorola_s_record_file.bat</i></p><pre>            
mips-mti-elf-objcopy program.elf -O srec program.rec
</pre></blockquote>

<p><big><b>5.6.2. Uploading ELF file into Xilinx FPGA board using BusBlaster and OpenOCD software</b></big></p>

<p>This step is optional. Before doing the upload it is necessary to connect BusBlaster to Digilent board as shown on <b><font color=blue>Figure 5.11</font></b>:</p>

<p><center><b><font color=blue>Figure 5.11. Connecting BusBlaster to Digilent Nexys4 DDR board</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2015/10/mipsfpga_setup_on_nexys4_ddr_for_seminars_in_russia_20151021_010905.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2015/10/mipsfpga_setup_on_nexys4_ddr_for_seminars_in_russia_20151021_010905.jpg" /></a>

<p>The following script relies on a script for OpenOCD developed for another lab:</p>

<blockquote><p>File <i>09_upload_to_xilinx_board_using_bus_blaster.bat</i></p><pre>   
copy program.elf FPGA_Ram.elf
rem Yes, it is working with DE2_115 script
cd C:\MIPSfpga\Codescape\ExamplePrograms\Scripts\DE2_115
loadMIPSfpga.bat C:\github\mipsfpga-plus\programs\00_counter
cd C:\github\mipsfpga-plus\programs\00_counter
del FPGA_Ram.elf

</pre></blockquote>

<p><big><b>5.6.3. Uploading ELF file into Altera FPGA boards using Bus Blaster and OpenOCD software</b></big></p>

<p>This step is optional. Before doing the upload it is necessary to connect BusBlaster to Terasic DE0-CV board as shown on <b><font color=blue>Figures 5.12 and 5.13</font></b>:</p>

<p><center><b><font color=blue>Figure 5.12. Connecting BusBlaster to Terasic DE0-CV board</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2015/10/mipsfpga_setup_on_de0_cv_for_seminars_in_russia_20151018_121639.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2015/10/mipsfpga_setup_on_de0_cv_for_seminars_in_russia_20151018_121639.jpg" /></a>

<p><center><b><font color=blue>Figure 5.13. Connecting BusBlaster to Terasic DE0-CV board</font></b></center></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2015/10/mipsfpga_setup_on_de0_cv_for_seminars_in_russia_20151018_121534.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2015/10/mipsfpga_setup_on_de0_cv_for_seminars_in_russia_20151018_121534.jpg" /></a>

<p>The following script relies on a script for OpenOCD developed for another lab:</p>

<blockquote><p>File <i>10_upload_to_altera_board_using_bus_blaster.bat</i></p><pre>   
copy program.elf FPGA_Ram.elf
cd C:\MIPSfpga\Codescape\ExamplePrograms\Scripts\DE2_115
loadMIPSfpga.bat C:\github\mipsfpga-plus\programs\00_counter
cd C:\github\mipsfpga-plus\programs\00_counter
del FPGA_Ram.elf

</pre></blockquote>

<p><big><b>5.6.4. Checking which virtual COM port is used by USB-to-UART connector</b></big></p>

<p>This step is necessary if a user does not know which virtual COM port is used by USB-to-UART connector.
On Windows this information can be obtained from either device manager or from attempting
to run <i>mode</i> command for a number of virtual COM-ports.</p>

<blockquote><p>File <i>11_check_which_com_port_is_used.bat</i></p><pre>               
mode com0
mode com1
mode com2
mode com3
mode com4
mode com5
mode com6
mode com7
mode com8
mode com9
pause
mode com10
mode com11
. . . . . . . . .

</pre></blockquote>

<p><big><b>5.6.5. Finally! Uploading the compiled and linked software program into the synthesized MIPSfpga system on FPGA board via Serial Loader</b></big></p>

<p>This step is required.</p>

<p>For Windows the script simply copies the generated Motorola S-record file into the pseudo-file
which corresponds to virtual COM-port used by USB-to-UART connector.
The COM ports existed in Windows from the beginning
and were present even before Microsoft Windows in Microsoft MS-DOS.
Both <i>mode</i> and <i>type</i> commands existed in MS-DOS and later Windows
from the beginning.</p>

<p>Before using this script the user has to modify it by setting the appropriate port number in "a" variable.</p>

<p>The potential problems when using FTDI-based USB-to-UART may be lack of driver
(it can be found on FTDI website) or access control in virtual machine if virtualization is used
(trivial for any admin to resolve).</p>

<blockquote><p>File <i>12_upload_to_the_board_using_uart.bat</i></p><pre>             
set a=16
set a=39
mode com%a% baud=115200 parity=n data=8 stop=1 to=off xon=off odsr=off octs=off dtr=off rts=off idsr=off
type program.rec &gt;\\.\COM%a%
</pre></blockquote>

<p>For Linux the script is different, but also very simple and uses the standard commands.
The user who runs this script should be included in Linux <i>dialout</i> group</p>

<blockquote><p>File <i>12_upload_to_the_board_using_uart.sh</i></p><pre>             
stty -F /dev/ttyUSB0 raw speed 115200 -crtscts cs8 -parenb -cstopb
cat program.rec > /dev/ttyUSB0
</pre></blockquote>

<p>After the program is uploaded, the user should be able to see the system working (counting, flashing LEDs).
If it does not work right away, check the port number, the presence of Motorola S-record file, and repeat again.</p>
<p><big><b>Appendix A. More pictures for setting up Terasic boards with Altera Cyclone II, III, IV and V FPGA</b></big></p>

<p>Some Terasic boards have USB-to-UART connector, for some other boards it is possible to use other interfaces,
but for simplicity this lab uses external USB-to-UART connectors attached to general purpose I/O pins.</p>

<p><font color=blue><b>Picture A.1.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a> chip.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/02/IMG_1423.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/02/IMG_1423.jpg" /></a>

<p><font color=blue><b>Picture A.2.</b> Serial Loader is also compatible with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>.
There is another, alternative cable, based on <a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182718&SearchText=PL2303HX">PL2303HX chip</a>
however this cable has more compatibility problems with Windows 8.x and we recommend to use cables based on PL2303TA instead:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/pl2303ta_160926_175832.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/pl2303ta_160926_175832-1024x1024.jpg" /></a>

<p><font color=blue><b>Picture A.3.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de0.terasic.com">Terasic DE0</a> with Altera Cyclone III FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_ft232rl_160926_213603.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_ft232rl_160926_213603-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.4.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de0.terasic.com">Terasic DE0</a> with Altera Cyclone III FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_ft232rl_160926_213705.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_ft232rl_160926_213705-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.5.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de0.terasic.com">Terasic DE0</a> with Altera Cyclone III FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_pl2303ta_160926_213033.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_pl2303ta_160926_213033-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.6.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de0.terasic.com">Terasic DE0</a> with Altera Cyclone III FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_pl2303ta_160926_213338.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_and_pl2303ta_160926_213338-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.7.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de0-cv.terasic.com.tw">Terasic DE0-CV</a> with Altera Cyclone V FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_ft232rl_160926_160527.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_ft232rl_160926_160527-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.8.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de0-cv.terasic.com.tw">Terasic DE0-CV</a> with Altera Cyclone V FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_ft232rl_160926_171948.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_ft232rl_160926_171948-1024x1024.jpg" /></a>

<p><font color=blue><b>Picture A.9.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de0-cv.terasic.com.tw">Terasic DE0-CV</a> with Altera Cyclone V FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_ft232rl_160926_175703.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_ft232rl_160926_175703-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.10.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de0-cv.terasic.com.tw">Terasic DE0-CV</a> with Altera Cyclone V FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_pl2303ta_160926_163235.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_pl2303ta_160926_163235-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.11.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de0-cv.terasic.com.tw">Terasic DE0-CV</a> with Altera Cyclone V FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_pl2303ta_160926_163515.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_cv_and_pl2303ta_160926_163515-1024x767.jpg" /></a>

<p><font color=blue><b>Picture A.12.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de0-nano.terasic.com.tw">Terasic DE0-Nano</a> board with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right top and the ground is connected to pin 6 from right top.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_ft232rl_160926_200247.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_ft232rl_160926_200247-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.13.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de0-nano.terasic.com.tw">Terasic DE0-Nano</a> board with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right top and the ground is connected to pin 6 from right top.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_ft232rl_160926_200325.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_ft232rl_160926_200325-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.14.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de0-nano.terasic.com.tw">Terasic DE0-Nano</a> board with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right top and the ground (black) is connected to pin 6 from right top:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_pl2303ta_160926_195706.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_pl2303ta_160926_195706-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.15.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de0-nano.terasic.com.tw">Terasic DE0-Nano</a> board with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right top and the ground (black) is connected to pin 6 from right top:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_pl2303ta_160926_200109.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de0_nano_and_pl2303ta_160926_200109-683x1024.jpg" /></a>

<p><font color=blue><b>Picture A.16.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de1.terasic.com">Terasic DE1</a> with Altera Cyclone II FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_ft232rl_160926_202017.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_ft232rl_160926_202017-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.17.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de1.terasic.com">Terasic DE1</a> with Altera Cyclone II FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_ft232rl_160926_202330.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_ft232rl_160926_202330-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.18.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de1.terasic.com">Terasic DE1</a> with Altera Cyclone II FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_pl2303ta_160926_202449.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_pl2303ta_160926_202449-1024x1024.jpg" /></a>

<p><font color=blue><b>Picture A.19.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de1.terasic.com">Terasic DE1</a> with Altera Cyclone II FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_pl2303ta_160926_202733.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de1_and_pl2303ta_160926_202733-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.20.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de2-115.terasic.com">Terasic DE2-115</a> with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_215000.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_215000-1024x768.jpg" /></a>

<p><font color=blue><b>Picture A.21.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de2-115.terasic.com">Terasic DE2-115</a> with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232001.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232001-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.22.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de2-115.terasic.com">Terasic DE2-115</a> with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232040.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232040-1024x1024.jpg" /></a>

<p><font color=blue><b>Picture A.23.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de2-115.terasic.com">Terasic DE2-115</a> with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232207.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232207-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.24.</b> A picture of FTDI-based USB-to-UART connector with
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231000536&SearchText=FT232RL+FTDI+USB">FT232RL</a>
chip connected to GPIO pins of <a href="http://de2-115.terasic.com">Terasic DE2-115</a> with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground is connected to pin 6 from right bottom.
Note that you need to setup 3.3V/5V jumper on this connector into 3.3V position to avoid potential damage to some sensitive FPGAs:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232333.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_ft232rl_160926_232333-683x1024.jpg" /></a>

<p><font color=blue><b>Picture A.25.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de2-115.terasic.com">Terasic DE2-115</a> with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_pl2303ta_160926_215112.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_pl2303ta_160926_215112-1024x683.jpg" /></a>

<p><font color=blue><b>Picture A.26.</b> A picture of
<a href="http://www.aliexpress.com/wholesale?catId=0&initiative_id=SB_20151231182357&SearchText=PL2303TA+cable">PL2303TA USB TTL to RS232 Converter Serial Cable module for win XP/VISTA/7/8/8.1</a>
connected to GPIO pins of <a href="http://de2-115.terasic.com">Terasic DE2-115</a> with Altera Cyclone IV FPGA.
UART TX (green) is connected to the pin 3 from right bottom and the ground (black) is connected to pin 6 from right bottom:</font></p>

<a href="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_pl2303ta_160926_231019.jpg"><img width=500 src="http://www.silicon-russia.com/wp-content/uploads/2016/09/terasic_de2_115_and_pl2303ta_160926_231019-1024x683.jpg" /></a>
</body>
</html>
